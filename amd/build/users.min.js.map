{"version":3,"file":"users.min.js","sources":["../src/users.js"],"sourcesContent":["define([\n    \"jquery\",\n    \"local_datatables/repository\",\n    \"local_datatables/datatables/dataTables.helper\",\n    \"core/notification\",\n    \"local_datatables/datatables/dataTables.dateTime\",\n    \"local_datatables/datatables/moment\",\n    \"local_datatables/datatables/i18n/en-GB\",\n    \"local_datatables/datatables/i18n/el-GR\",\n    \"local_datatables/datatables/jquery.dataTables\",\n    \"local_datatables/datatables/dataTables.bootstrap4\",\n    \"local_datatables/datatables/dataTables.responsive\",\n    \"local_datatables/datatables/responsive.bootstrap4\",\n    \"local_datatables/datatables/dataTables.buttons\",\n    \"local_datatables/datatables/buttons.bootstrap4\",\n    \"local_datatables/datatables/buttons.colVis\",\n    \"local_datatables/datatables/buttons.html5\",\n    \"local_datatables/datatables/buttons.print\",\n    \"local_datatables/bootstrap-select/bootstrap-select\",\n], function($,\n    Repository,\n    Helper,\n    Notification,\n    DateTime,\n    moment,\n    languageENGB,\n    languageELGR,\n    ) {\n    var init = function(locale) {\n        $(function() {\n            var tableid = '#users';\n            var orderColumn = 1; // Set the default ordering column index\n            var lang;\n            if (locale === 'el' || locale === 'el_wp') {\n                lang = languageELGR;\n            } else {\n                lang = languageENGB;\n            }\n\n            var table = $(tableid).DataTable({\n                initComplete: function() {\n                    // Add key type events with 1 second of delay for searching\n                    var typingTimer;\n                    var doneTypingInterval = 500; // 0.5 second\n\n                    $(tableid + \" .filters\").on(\"keyup\", \"input\", function() {\n                        // Clear the existing timer if it exists\n                        clearTimeout(typingTimer);\n\n                        // Start a new timer\n                        typingTimer = setTimeout(function() {\n                            table.column($(this).data(\"index\")).search(this.value).draw();\n                        }.bind(this), doneTypingInterval);\n                    });\n\n                    // Event for handling when the user stops typing\n                    $(tableid + \" .filters\").on(\"keydown\", \"input\", function() {\n                        // Clear the existing timer if it exists\n                        clearTimeout(typingTimer);\n                    });\n\n                    // Trigger search on select lists\n                    $(tableid + \" .filters\").on(\"change\", \"select\", function() {\n                        // Apply the filter for selected values\n                        var selectedValues = $(this).val();\n\n                        if (Array.isArray(selectedValues) && selectedValues.length > 1) {\n                            table.column($(this).data(\"index\")).search(selectedValues.join('|'), true, false).draw();\n                        } else {\n                            table.column($(this).data(\"index\")).search(selectedValues).draw();\n                        }\n                    });\n\n                    // Init datetime fields\n                    const datetimeElements = document.querySelectorAll('.datetime');\n\n                    if (datetimeElements) {\n                        datetimeElements.forEach(function(element) {\n                            const index = element.getAttribute('data-index');\n                            DateTime.use(moment);\n                            new DateTime(element, {\n                                format: 'DD/MM/YY',\n                                buttons: {\n                                    clear: true\n                                },\n                                onChange: function(value) {\n                                    table.column(index).search(value).draw();\n                                }\n                            });\n                        });\n                    }\n\n                    // Show the datatable.\n                    $(tableid).removeClass('hidden');\n\n                    // Init selectpicker.\n                    $('.selectpicker').selectpicker('render');\n\n                    Helper.initResponsiveTable(table);\n                },\n                processing: true,\n                serverSide: true,\n                ajax: function(data, callback) {\n                    Repository.process({\n                        'data': JSON.stringify(data),\n                        'namespace': 'local_registration',\n                        'tableid': 'users',\n                    })\n                    .then(function(json) {\n                        callback(JSON.parse(json));\n                        return;\n                    })\n                    .catch(function(error) {\n                        Notification.exception(error);\n                    });\n                },\n                searchDelay: 400,\n                orderCellsTop: true,\n                fixedHeader: true,\n                language: lang,\n                responsive: {\n                    details: {\n                        type: 'column',\n                        target: 0,\n                    }\n                },\n                paging: true,\n                order: [[orderColumn, \"asc\"]],\n                lengthChange: true,\n                lengthMenu: [\n                    [10, 20, 30, -1],\n                    [10, 20, 30, \"All\"],\n                ],\n                columns: [\n                    // Data: data to display,\n                    // name: Raw data column name (could be an alias column name).\n                    // orderable: column name for ordering.\n                    // searchable: column name for searching.\n                    {defaultContent: ''},\n                    {data: \"firstname\", name: \"firstname\"},\n                    {data: \"lastname\", name: \"lastname\"},\n                    {\n                        data: \"email\", name: \"email\",\n                        render: function(data, type, row) {\n                            if (row.notified == 1) {\n                                return row.email + '<br><span class=\"badge bg-warning\">' +\n                                    M.util.get_string(\"notified\", \"local_registration\") + '</span>';\n                            } else {\n                                return row.email;\n                            }\n                        }\n                    },\n                    {data: \"tenantname\", name: \"t.id\", orderable: \"t.name\", searchable: \"equals||t.name\"},\n                    {\n                        data: \"country_formatted\", name: \"country\",\n                        orderable: \"country_text\", searchable: \"equals||country_text\"},\n                    {data: \"gender\", name: \"gender\", searchable: \"equals\"},\n                    {data: \"domain\", name: \"domain\", searchable: \"equals\"},\n                    {data: \"comments\", name: \"comments\"},\n                    {data: \"interests_formatted\", name: \"interests\"},\n                    {\n                        data: \"confirmed_formatted\", name: \"confirmed\",\n                        orderable: \"confirmed_text\", searchable: \"equals||confirmed_text\"\n                    },\n                    {data: \"timecreated_formatted\", name: \"lr.timecreated\", searchable: \"datetime\"},\n                    {data: \"assessor_text\", name: \"assessor_expr\", orderable: \"assessor_text\",\n                        searchable: \"assessor_expr||assessor_text\"},\n                    {\n                        data: {},\n                        render: function(data) {\n                            var btnApprove = '<button class=\"btn btn-success btn-sm btn-approve\" ' +\n                            'data-action=\"approve\" data-id=\"' + data.id + '\">' +\n                                M.util.get_string('approve', 'local_registration') + '</button>';\n\n                            var btnReject = '<button class=\"btn btn-danger btn-sm btn-reject\" ' +\n                            'data-action=\"reject\" data-id=\"' + data.id + '\">' +\n                                M.util.get_string('reject', 'local_registration') + '</button>';\n\n                            var btnNotify = '';\n                            if (data.notified !== 1) {\n                                btnNotify = '<button class=\"btn btn-warning btn-sm btn-notify\" ' +\n                            'data-action=\"notify\" data-id=\"' + data.id + '\">' +\n                                M.util.get_string('notify', 'local_registration') + '</button>';\n                            }\n\n                            return '<span class=\"buttons\" data-value=\"' + data.id + '\">' +\n                                btnApprove + btnReject + btnNotify + ' </span>';\n                        },\n                        name: \"actions\",\n                        orderable: false,\n                        searchable: false\n                    },\n                ],\n                columnDefs: [\n                    {\n                        targets: 0,\n                        className: 'dtr-control noVis',\n                        orderable: false,\n                        searchable: false\n                    },\n                ],\n                dom: '<B<l><t>ftrip>',\n                buttons: [\n                    {\n                        extend: 'collection',\n                        className: 'exportButton',\n                        text: 'Export',\n                        buttons: [\n                            {\n                                extend: 'copy',\n                                exportOptions: {\n                                    columns: ':visible:not(.noVis)',\n                                }\n                            },\n                            {\n                                extend: 'print',\n                                exportOptions: {\n                                    columns: ':visible:not(.noVis)',\n                                }\n                            },\n                            {\n                                extend: 'excel',\n                                exportOptions: {\n                                    columns: ':visible:not(.noVis)',\n                                }\n                            },\n                            {\n                                extend: 'csv',\n                                exportOptions: {\n                                    columns: ':visible:not(.noVis)',\n                                }\n                            },\n                        ]\n                    },\n                    {\n                        extend: 'colvis',\n                        columns: ':not(.noVis)'\n                    }\n                ]\n            });\n\n            // Create modal forms on buttons click\n            table.on('click', '.btn-approve',\n                Helper.createModalForm(table, 'approve', 'modal:approvetitle', 'modal:approvesuccess', 'local_registration'));\n\n            table.on('click', '.btn-reject',\n                Helper.createModalForm(table, 'reject', 'modal:rejecttitle', 'modal:rejectsuccess', 'local_registration'));\n\n            table.on('click', '.btn-notify',\n                Helper.createModalForm(table, 'notify', 'modal:notifytitle', 'modal:notifysuccess', 'local_registration'));\n\n            // Reset filters\n            table.on('click', '.reset-filters', function() {\n                Helper.resetTableFilters(table, false);\n            });\n        });\n    };\n    return {\n        init: init,\n    };\n});\n"],"names":["define","$","Repository","Helper","Notification","DateTime","moment","languageENGB","languageELGR","init","locale","lang","table","DataTable","initComplete","typingTimer","tableid","on","clearTimeout","setTimeout","column","this","data","search","value","draw","bind","selectedValues","val","Array","isArray","length","join","datetimeElements","document","querySelectorAll","forEach","element","index","getAttribute","use","format","buttons","clear","onChange","removeClass","selectpicker","initResponsiveTable","processing","serverSide","ajax","callback","process","JSON","stringify","then","json","parse","catch","error","exception","searchDelay","orderCellsTop","fixedHeader","language","responsive","details","type","target","paging","order","lengthChange","lengthMenu","columns","defaultContent","name","render","row","notified","email","M","util","get_string","orderable","searchable","btnApprove","id","btnReject","btnNotify","columnDefs","targets","className","dom","extend","text","exportOptions","createModalForm","resetTableFilters"],"mappings":"AAAAA,kCAAO,CACH,SACA,8BACA,gDACA,oBACA,kDACA,qCACA,yCACA,yCACA,gDACA,oDACA,oDACA,oDACA,iDACA,iDACA,6CACA,4CACA,4CACA,uDACD,SAASC,EACRC,WACAC,OACAC,aACAC,SACAC,OACAC,aACAC,oBAuOO,CACHC,KAtOO,SAASC,QAChBT,GAAE,eAGMU,KAEAA,KADW,OAAXD,QAA8B,UAAXA,OACZF,aAEAD,iBAGPK,MAAQX,EATE,UASSY,UAAU,CAC7BC,aAAc,eAENC,YAGJd,EAAEe,mBAAuBC,GAAG,QAAS,SAAS,WAE1CC,aAAaH,aAGbA,YAAcI,WAAW,WACrBP,MAAMQ,OAAOnB,EAAEoB,MAAMC,KAAK,UAAUC,OAAOF,KAAKG,OAAOC,QACzDC,KAAKL,MATc,QAazBpB,EAAEe,mBAAuBC,GAAG,UAAW,SAAS,WAE5CC,aAAaH,gBAIjBd,EAAEe,mBAAuBC,GAAG,SAAU,UAAU,eAExCU,eAAiB1B,EAAEoB,MAAMO,MAEzBC,MAAMC,QAAQH,iBAAmBA,eAAeI,OAAS,EACzDnB,MAAMQ,OAAOnB,EAAEoB,MAAMC,KAAK,UAAUC,OAAOI,eAAeK,KAAK,MAAM,GAAM,GAAOP,OAElFb,MAAMQ,OAAOnB,EAAEoB,MAAMC,KAAK,UAAUC,OAAOI,gBAAgBF,gBAK7DQ,iBAAmBC,SAASC,iBAAiB,aAE/CF,kBACAA,iBAAiBG,SAAQ,SAASC,eACxBC,MAAQD,QAAQE,aAAa,cACnClC,SAASmC,IAAIlC,YACTD,SAASgC,QAAS,CAClBI,OAAQ,WACRC,QAAS,CACLC,OAAO,GAEXC,SAAU,SAASpB,OACfZ,MAAMQ,OAAOkB,OAAOf,OAAOC,OAAOC,aAOlDxB,EA/DM,UA+DK4C,YAAY,UAGvB5C,EAAE,iBAAiB6C,aAAa,UAEhC3C,OAAO4C,oBAAoBnC,QAE/BoC,YAAY,EACZC,YAAY,EACZC,KAAM,SAAS5B,KAAM6B,UACjBjD,WAAWkD,QAAQ,MACPC,KAAKC,UAAUhC,gBACV,6BACF,UAEdiC,MAAK,SAASC,MACXL,SAASE,KAAKI,MAAMD,UAGvBE,OAAM,SAASC,OACZvD,aAAawD,UAAUD,WAG/BE,YAAa,IACbC,eAAe,EACfC,aAAa,EACbC,SAAUrD,KACVsD,WAAY,CACRC,QAAS,CACLC,KAAM,SACNC,OAAQ,IAGhBC,QAAQ,EACRC,MAAO,CAAC,CAhGM,EAgGQ,QACtBC,cAAc,EACdC,WAAY,CACR,CAAC,GAAI,GAAI,IAAK,GACd,CAAC,GAAI,GAAI,GAAI,QAEjBC,QAAS,CAKL,CAACC,eAAgB,IACjB,CAACpD,KAAM,YAAaqD,KAAM,aAC1B,CAACrD,KAAM,WAAYqD,KAAM,YACzB,CACIrD,KAAM,QAASqD,KAAM,QACrBC,OAAQ,SAAStD,KAAM6C,KAAMU,YACL,GAAhBA,IAAIC,SACGD,IAAIE,MAAQ,sCACfC,EAAEC,KAAKC,WAAW,WAAY,sBAAwB,UAEnDL,IAAIE,QAIvB,CAACzD,KAAM,aAAcqD,KAAM,OAAQQ,UAAW,SAAUC,WAAY,kBACpE,CACI9D,KAAM,oBAAqBqD,KAAM,UACjCQ,UAAW,eAAgBC,WAAY,wBAC3C,CAAC9D,KAAM,SAAUqD,KAAM,SAAUS,WAAY,UAC7C,CAAC9D,KAAM,SAAUqD,KAAM,SAAUS,WAAY,UAC7C,CAAC9D,KAAM,WAAYqD,KAAM,YACzB,CAACrD,KAAM,sBAAuBqD,KAAM,aACpC,CACIrD,KAAM,sBAAuBqD,KAAM,YACnCQ,UAAW,iBAAkBC,WAAY,0BAE7C,CAAC9D,KAAM,wBAAyBqD,KAAM,iBAAkBS,WAAY,YACpE,CAAC9D,KAAM,gBAAiBqD,KAAM,gBAAiBQ,UAAW,gBACtDC,WAAY,gCAChB,CACI9D,KAAM,GACNsD,OAAQ,SAAStD,UACT+D,WAAa,qFACmB/D,KAAKgE,GAAK,KAC1CN,EAAEC,KAAKC,WAAW,UAAW,sBAAwB,YAErDK,UAAY,kFACmBjE,KAAKgE,GAAK,KACzCN,EAAEC,KAAKC,WAAW,SAAU,sBAAwB,YAEpDM,UAAY,UACM,IAAlBlE,KAAKwD,WACLU,UAAY,mFACmBlE,KAAKgE,GAAK,KACzCN,EAAEC,KAAKC,WAAW,SAAU,sBAAwB,aAGjD,qCAAuC5D,KAAKgE,GAAK,KACpDD,WAAaE,UAAYC,UAAY,YAE7Cb,KAAM,UACNQ,WAAW,EACXC,YAAY,IAGpBK,WAAY,CACR,CACIC,QAAS,EACTC,UAAW,oBACXR,WAAW,EACXC,YAAY,IAGpBQ,IAAK,iBACLlD,QAAS,CACL,CACImD,OAAQ,aACRF,UAAW,eACXG,KAAM,SACNpD,QAAS,CACL,CACImD,OAAQ,OACRE,cAAe,CACXtB,QAAS,yBAGjB,CACIoB,OAAQ,QACRE,cAAe,CACXtB,QAAS,yBAGjB,CACIoB,OAAQ,QACRE,cAAe,CACXtB,QAAS,yBAGjB,CACIoB,OAAQ,MACRE,cAAe,CACXtB,QAAS,2BAKzB,CACIoB,OAAQ,SACRpB,QAAS,mBAMrB7D,MAAMK,GAAG,QAAS,eACdd,OAAO6F,gBAAgBpF,MAAO,UAAW,qBAAsB,uBAAwB,uBAE3FA,MAAMK,GAAG,QAAS,cACdd,OAAO6F,gBAAgBpF,MAAO,SAAU,oBAAqB,sBAAuB,uBAExFA,MAAMK,GAAG,QAAS,cACdd,OAAO6F,gBAAgBpF,MAAO,SAAU,oBAAqB,sBAAuB,uBAGxFA,MAAMK,GAAG,QAAS,kBAAkB,WAChCd,OAAO8F,kBAAkBrF,OAAO"}